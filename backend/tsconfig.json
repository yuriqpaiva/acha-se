{
  "compilerOptions": {
    /* Language and Environment */
    "target": "ES2022",                                  /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    "module": "commonjs",                                /* Specify what module code is generated. */
    "outDir": "./dist",                                  /* Specify an output folder for all emitted files. */
    "esModuleInterop": true,                             /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
    "forceConsistentCasingInFileNames": true,            /* Ensure that casing is correct in imports. */

    /* Type Checking */
    "strict": true,                                      /* Enable all strict type-checking options. */
    "skipLibCheck": true,                                /* Skip type checking all .d.ts files. */

    /* Module Resolution */
    "moduleResolution": "node",                          /* Use Node.js module resolution algorithm. */
    "resolveJsonModule": true,                           /* Enable importing .json files. */
    "allowSyntheticDefaultImports": true,                /* Allow 'import x from y' when a module doesn't have a default export. */

    /* Emit and Build */
    "sourceMap": true,                                   /* Create source map files for emitted JavaScript files. */
    "declaration": false,                                /* Disable declaration file generation for simplicity. */
    "removeComments": true,                              /* Disable emitting comments. */
    "isolatedModules": true                              /* Ensure each file can be safely transpiled without relying on other files. */
  },
  "include": ["./src/**/*.ts"],                          /* Include all TypeScript files in the src directory. */
  "exclude": ["node_modules", "dist"]                    /* Exclude node_modules and the output directory. */
}
